
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User Profile",
      "description": "Represents a user's public profile information.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user's display name."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL for the user's avatar image.",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "postalCode": {
          "type": "string",
          "description": "The user's postal code for location-based grouping."
        },
        "location": {
            "type": "string",
            "description": "The user's last known location as a string 'Lat: XX.XXXX, Lon: YY.YYYY'."
        },
        "verificationTimestamp": {
            "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp",
            "description": "The timestamp when the user last verified their zone."
        },
        "isSharingLocationWithFamily": {
            "type": "boolean",
            "description": "Whether the user is currently sharing their location with their family."
        }
      },
      "required": ["name", "email"]
    },
    "SosAlert": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SOS Alert",
      "description": "Represents an SOS alert sent by a user.",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who sent the alert."
        },
        "userName": {
          "type": "string",
          "description": "The name of the user who sent the alert."
        },
        "userAvatarUrl": {
          "type": "string",
          "description": "The avatar URL of the user who sent the alert."
        },
        "message": {
          "type": "string",
          "description": "Text message accompanying the SOS alert."
        },
        "location": {
          "type": "string",
          "description": "Location from where the alert was sent."
        },
        "category": {
            "type": "string",
            "description": "The category of the SOS alert.",
            "enum": ["Robo", "Accidentes", "Desastres Naturales", "Personas Sospechosas"]
        },
        "imageUrl": {
            "type": "string",
            "format": "uri",
            "description": "Optional URL to an image of the incident."
        },
        "audioUrl": {
            "type": "string",
            "format": "uri",
            "description": "Optional URL to an audio recording of the incident."
        },
        "audience": {
          "type": "array",
          "description": "The target audience for the alert (e.g., 'family', 'neighbors').",
          "items": {
            "type": "string"
          }
        },
        "timestamp": {
          "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp"
        }
      },
      "required": ["userId", "userName", "message", "location", "category", "audience", "timestamp"]
    },
    "Aviso": {
      "title": "Aviso",
      "description": "Represents a non-urgent announcement for meetings, events, etc.",
      "type": "object",
      "properties": {
        "userId": { "type": "string" },
        "userName": { "type": "string" },
        "userAvatarUrl": { "type": "string" },
        "title": { "type": "string" },
        "description": { "type": "string" },
        "eventTimestamp": { "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp" },
        "audience": {
          "type": "array",
          "items": { "type": "string" }
        },
        "timestamp": { "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp" }
      },
      "required": ["userId", "userName", "title", "description", "eventTimestamp", "audience", "timestamp"]
    },
    "SurveillanceZone": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Surveillance Zone",
      "description": "Represents a geographical area for neighborhood watch.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the surveillance zone (e.g., 'Colonia Centro')."
        },
        "polygon": {
          "type": "array",
          "description": "An array of coordinates defining the zone's boundary.",
          "items": {
            "type": "object",
            "properties": {
              "lat": { "type": "number" },
              "lng": { "type": "number" }
            },
            "required": ["lat", "lng"]
          }
        }
      },
      "required": ["name", "polygon"]
    },
    "FamilyMember": {
      "title": "Family Member",
      "description": "Represents a family member relationship between two users.",
      "type": "object",
      "properties": {
        "userId": { "type": "string", "description": "The UID of the family member." },
        "name": { "type": "string", "description": "The name of the family member." },
        "email": { "type": "string", "description": "The email of the family member." },
        "avatarUrl": { "type": "string", "description": "The avatar URL of the family member." },
        "status": {
          "type": "string",
          "enum": ["pending", "accepted", "requested"],
          "description": "The status of the family connection."
        }
      },
      "required": ["userId", "name", "email", "status"]
    },
    "Group": {
        "title": "Group",
        "description": "Represents a user-created group.",
        "type": "object",
        "properties": {
            "name": { "type": "string", "description": "The name of the group." },
            "ownerId": { "type": "string", "description": "The UID of the user who owns the group." }
        },
        "required": ["name", "ownerId"]
    },
    "GroupMember": {
        "title": "Group Member",
        "description": "Represents a member of a user-created group.",
        "type": "object",
        "properties": {
            "userId": { "type": "string", "description": "The UID of the group member." },
            "name": { "type": "string", "description": "The name of the group member." },
            "email": { "type": "string", "description": "The email of the group member." },
            "avatarUrl": { "type": "string", "description": "The avatar URL of the group member." },
            "status": {
                "type": "string",
                "enum": ["pending", "accepted", "requested"],
                "description": "The status of the group membership."
            },
            "isSharingLocation": {
                "type": "boolean",
                "description": "Whether the member is currently sharing their location with the group."
            },
             "location": {
                "type": "string",
                "description": "The user's last known location as a string 'Lat: XX.XXXX, Lon: YY.YYYY'."
            }
        },
        "required": ["userId", "name", "email", "status"]
    },
    "UserGroup": {
        "title": "User Group",
        "description": "A reference to a group a user is a member of.",
        "type": "object",
        "properties": {
            "name": { "type": "string", "description": "The name of the group." }
        },
        "required": ["name"]
    },
    "ChatMessage": {
        "title": "Chat Message",
        "description": "A single message within a chat.",
        "type": "object",
        "properties": {
            "text": { "type": "string" },
            "userId": { "type": "string" },
            "userName": { "type": "string" },
            "userAvatarUrl": { "type": "string" },
            "timestamp": { "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp" },
            "alertId": { "type": "string", "description": "Optional ID of the SOS alert related to this message." }
        },
        "required": ["text", "userId", "userName", "timestamp"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": { "$ref": "#/backend/entities/UserProfile" },
      "description": "Stores public user profiles. Writable by the user themselves."
    },
    "/users/{userId}/familyMembers/{memberId}": {
      "schema": { "$ref": "#/backend/entities/FamilyMember" },
      "description": "Subcollection storing the family members of a user."
    },
     "/users/{userId}/groups/{groupId}": {
      "schema": { "$ref": "#/backend/entities/UserGroup" },
      "description": "Subcollection storing references to groups a user is a member of."
    },
    "/sos-alerts/{alertId}": {
      "schema": { "$ref": "#/backend/entities/SosAlert" },
      "description": "Stores all SOS alerts. Writable by any authenticated user. This collection is processed by backend logic to populate user feeds."
    },
     "/avisos/{avisoId}": {
      "schema": { "$ref": "#/backend/entities/Aviso" },
      "description": "Stores all non-urgent announcements."
    },
    "/surveillance-zones/{zoneId}": {
      "schema": { "$ref": "#/backend/entities/SurveillanceZone" },
      "description": "Stores the geographical boundaries for each neighborhood watch group."
    },
    "/family-chats/{familyId}/messages/{messageId}": {
        "schema": { "$ref": "#/backend/entities/ChatMessage" },
        "description": "Messages within a specific family chat."
    },
    "/neighborhood-chats/{postalCode}/messages/{messageId}": {
        "schema": { "$ref": "#/backend/entities/ChatMessage" },
        "description": "Messages within a specific neighborhood chat, grouped by postal code."
    },
    "/groups/{groupId}": {
      "schema": { "$ref": "#/backend/entities/Group" },
      "description": "Stores metadata for user-created groups."
    },
    "/groups/{groupId}/members/{memberId}": {
      "schema": { "$ref": "#/backend/entities/GroupMember" },
      "description": "Stores the members of a specific user-created group."
    },
    "group-chats/{groupId}/messages/{messageId}": {
        "schema": { "$ref": "#/backend/entities/ChatMessage" },
        "description": "Messages within a specific manually-created group chat."
    }
  }
}
