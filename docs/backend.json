
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User Profile",
      "description": "Represents a user's public profile information.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user's display name."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL for the user's avatar image.",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "postalCode": {
          "type": "string",
          "description": "The user's postal code for location-based grouping."
        },
        "location": {
            "type": "string",
            "description": "The user's last known location as a string 'Lat: XX.XXXX, Lon: YY.YYYY'."
        }
      },
      "required": ["name", "email"]
    },
    "SosAlert": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SOS Alert",
      "description": "Represents an SOS alert sent by a user.",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who sent the alert."
        },
        "userName": {
          "type": "string",
          "description": "The name of the user who sent the alert."
        },
        "userAvatarUrl": {
          "type": "string",
          "description": "The avatar URL of the user who sent the alert."
        },
        "message": {
          "type": "string",
          "description": "Text message accompanying the SOS alert."
        },
        "location": {
          "type": "string",
          "description": "Location from where the alert was sent."
        },
        "category": {
            "type": "string",
            "description": "The category of the SOS alert.",
            "enum": ["Robo", "Accidentes", "Desastres Naturales", "Personas Sospechosas"]
        },
        "audience": {
          "type": "array",
          "description": "The target audience for the alert (e.g., 'family', 'neighbors').",
          "items": {
            "type": "string"
          }
        },
        "timestamp": {
          "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp"
        }
      },
      "required": ["userId", "userName", "message", "location", "category", "audience", "timestamp"]
    },
    "SurveillanceZone": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Surveillance Zone",
      "description": "Represents a geographical area for neighborhood watch.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the surveillance zone (e.g., 'Colonia Centro')."
        },
        "polygon": {
          "type": "array",
          "description": "An array of coordinates defining the zone's boundary.",
          "items": {
            "type": "object",
            "properties": {
              "lat": { "type": "number" },
              "lng": { "type": "number" }
            },
            "required": ["lat", "lng"]
          }
        }
      },
      "required": ["name", "polygon"]
    },
    "FamilyMember": {
      "title": "Family Member",
      "description": "Represents a family member relationship between two users.",
      "type": "object",
      "properties": {
        "userId": { "type": "string", "description": "The UID of the family member." },
        "name": { "type": "string", "description": "The name of the family member." },
        "email": { "type": "string", "description": "The email of the family member." },
        "avatarUrl": { "type": "string", "description": "The avatar URL of the family member." },
        "status": {
          "type": "string",
          "enum": ["pending", "accepted", "requested"],
          "description": "The status of the family connection."
        }
      },
      "required": ["userId", "name", "email", "status"]
    },
    "ChatMessage": {
        "title": "Chat Message",
        "description": "A single message within a chat.",
        "type": "object",
        "properties": {
            "text": { "type": "string" },
            "userId": { "type": "string" },
            "userName": { "type": "string" },
            "userAvatarUrl": { "type": "string" },
            "timestamp": { "$ref": "https://firebase.google.com/docs/reference/node/firebase.firestore.FieldValue#serverTimestamp" }
        },
        "required": ["text", "userId", "userName", "timestamp"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": { "$ref": "#/backend/entities/UserProfile" },
      "description": "Stores public user profiles. Writable by the user themselves."
    },
    "/users/{userId}/familyMembers/{memberId}": {
      "schema": { "$ref": "#/backend/entities/FamilyMember" },
      "description": "Subcollection storing the family members of a user."
    },
    "/users/{userId}/alert-feed/{alertId}": {
      "schema": { "$ref": "#/backend/entities/SosAlert" },
      "description": "A personalized feed of alerts relevant to the user (from family, neighbors, etc.). This is populated by backend logic."
    },
    "/sos-alerts/{alertId}": {
      "schema": { "$ref": "#/backend/entities/SosAlert" },
      "description": "Stores all SOS alerts. Writable by any authenticated user. This collection is processed by backend logic to populate user feeds."
    },
    "/surveillance-zones/{zoneId}": {
      "schema": { "$ref": "#/backend/entities/SurveillanceZone" },
      "description": "Stores the geographical boundaries for each neighborhood watch group."
    },
    "/family-chats/{familyId}/messages/{messageId}": {
        "schema": { "$ref": "#/backend/entities/ChatMessage" },
        "description": "Messages within a specific family chat."
    },
    "/neighborhood-chats/{postalCode}/messages/{messageId}": {
        "schema": { "$ref": "#/backend/entities/ChatMessage" },
        "description": "Messages within a specific neighborhood chat, grouped by postal code."
    },
    "/group-chats/{groupId}/messages/{messageId}": {
        "schema": { "$ref": "#/backend/entities/ChatMessage" },
        "description": "Messages within a specific manually-created group chat."
    }
  }
}
