rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile information.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user123' can create their profile document at /users/user123.
     * @allow (get, update, delete) - User with UID 'user123' can get, update, and delete their profile document at /users/user123.
     * @deny (create) - User with UID 'user456' cannot create a profile document at /users/user123.
     * @deny (get, update, delete) - User with UID 'user456' cannot get, update, and delete the profile document at /users/user123.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }

    /**
     * @description Controls access to SOS alerts.
     * @path /sos-alerts/{alertId}
     * @allow (create) - Authenticated user can create an SOS alert.
     * @allow (get, list) - Any user can read SOS alerts.
     * @deny (update, delete) - Only the owner can update/delete alerts.
     * @principle Allows public read access with owner-only writes for SOS alerts.
     */
    match /sos-alerts/{alertId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update, delete: if false; // TODO: Add owner validation once the schema is updated with an ownership field.
    }

    /**
     * @description Controls access to surveillance zones.
     * @path /surveillance-zones/{zoneId}
     * @allow (get, list) - Any user can read surveillance zone data.
     * @deny (create, update, delete) - No one can create, update, or delete surveillance zones through the client.
     * @principle Allows public read access for surveillance zone data.
     */
    match /surveillance-zones/{zoneId} {
      allow get: if true;
      allow list: if true;
      allow create, update, delete: if false;
    }
  }
}